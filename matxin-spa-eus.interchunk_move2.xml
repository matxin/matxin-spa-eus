<transfer>

<!-- si='subj'/per	type=~'adi-'/subMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and si='subj') subMi←per" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='subj' and @per != '']]">
      <copy>
        <attribute name="subMi"><value-of select="./CHUNK[@si='subj' and @per != '']/@per"/></attribute>
        <apply-templates select="@*[name()!='subMi'] | *"/>
      </copy>
    </template>
</def-rule>

<!-- si='dobj'/per	type=~'adi-'/objMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and si='dobj') objMi←per" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='dobj' and @per != '']]">
      <copy>
        <attribute name="objMi"><value-of select="./CHUNK[@si='dobj' and @per != '']/@per"/></attribute>
        <apply-templates select="@*[name()!='objMi'] | *"/>
      </copy>
    </template>
</def-rule>
<!-- -->

<!-- cas='[DAT]'/per	type=~'adi-'/datMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and cas='[DAT]') datMi←per" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@cas='[DAT]' and @per != '']]">
      <copy>
        <attribute name="datMi"><value-of select="./CHUNK[@cas='[DAT]' and @per != '']/@per"/></attribute>
        <apply-templates select="@*[name()!='datMi'] | *"/>
      </copy>
    </template>
</def-rule>

<!-- si='iobj' && cas!='[DAT]'/per	type=~'adi-'/objMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (si='iobj' and cas='[DAT]')) objMi←per" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='iobj' and @cas!='[DAT]' and @per != '']]">
      <copy>
        <attribute name="objMi"><value-of select="./CHUNK[@si='iobj' and @cas!='[DAT]' and @per != '']/@per"/></attribute>
        <apply-templates select="@*[name()!='objMi'] | *"/>
      </copy>
    </template>
</def-rule>
<!-- -->

<!-- si='subj' && per=''/mi	type=~'adi-'/subMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (si='subj' and per='')) subMi←per" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='subj' and not(boolean(@per)) and @mi != '']]">
      <copy>
        <attribute name="subMi"><value-of select="./CHUNK[@si='subj' and not(boolean(@per)) and @mi != '']/@mi"/></attribute>
        <apply-templates select="@*[name()!='subMi'] | *"/>
      </copy>
    </template>
</def-rule>

<!-- si='iobj' && cas='[ABS]' && per=''/mi	type=~'adi-'/objMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (si='iobj' and cas='[ABS]' and per='')) objMi←per" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='subj' and @cas='[ABS]' and @per='' and @mi != '']]">
      <copy>
        <attribute name="objMi"><value-of select="./CHUNK[@si='subj' and @cas='[ABS]' and @per='' and @mi != '']/@mi"/></attribute>
        <apply-templates select="@*[name()!='objMi'] | *"/>
      </copy>
    </template>
</def-rule>
<!-- -->

<!-- cas='[DAT]' && per=''&& mi!='[MG]'/mi	type=~'adi-'/datMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (cas='[DAT]' and per='' and mi!='[MG]')) datMi←mi" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@cas='[DAT]' and @per='' and @mi!='[MG]' and @mi != '']]">
      <copy>
        <attribute name="datMi"><value-of select="./CHUNK[@cas='[DAT]' and @per='' and @mi!='[MG]' and @mi != '']/@mi"/></attribute>
        <apply-templates select="@*[name()!='datMi'] | *"/>
      </copy>
    </template>
</def-rule>

<!-- cas='[DAT]' && per='' && mi='[MG]'/'[NUMS]'	type=~'adi-'/datMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (cas='[DAT]' and per and mi='[MG]')) datMi←'[NUMS]'" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@cas='[DAT]' and @per='' and @mi='[MG]' and @mi != '']]">
      <copy>
        <attribute name="datMi">'[NUMS]'</attribute>
        <apply-templates select="@*[name()!='datMi'] | *"/>
      </copy>
    </template>
</def-rule>
<!-- -->

<!-- si='dobj' && per=''/mi	type=~'adi-'/objMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (si='dobj' and per='')) objMi←mi" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='dobj' and @per='' and @mi != '']]">
      <copy>
        <attribute name="objMi"><value-of select="./CHUNK[@si='dobj' and @per='' and @mi != '']/@mi"/></attribute>
        <apply-templates select="@*[name()!='objMi'] | *"/>
      </copy>
    </template>
</def-rule>

<!-- si='dobj' && per='' && leafpos='[Z]'/'[NUMP]'	type=~'adi-'/objMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (si='dobj' and per='' and leafpos='[Z]')) objMi←'[NUMP]'" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='dobj' and not(boolean(@per)) and @leafpos='[Z]']]">
      <copy>
        <attribute name="objMi">[NUMP]</attribute>
        <apply-templates select="@*[name()!='objMi'] | *"/>
      </copy>
    </template>
</def-rule>

<!-- -->

<!-- # ¿Cuántas manzanas has comprado? ->  Zenbat sagar erosi DITUZU? -->
<!-- si='dobj' && per='' && qtype='wh'/num	type=~'adi-'/objMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (si='dobj' and per='' and qtype='wh')) objMi←num" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='dobj' and not(boolean(@per)) and @qtype='wh']]">
      <copy>
        <attribute name="objMi"><value-of select="./CHUNK[@si='dobj' and not(boolean(@per)) and @qtype='wh']/@num"/></attribute>
        <apply-templates select="@*[name()!='objMi'] | *"/>
      </copy>
    </template>
</def-rule>
<!-- -->


<!-- si='subj' && per='' && leafpos='[Z]'/'[NUMP]'	type=~'adi-'/subMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (si='subj' and per='' and leafpos='[Z]')) subMi←'[NUMP]'" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='subj' and not(boolean(@per)) and @leafpos='[Z]']]">
      <copy>
        <attribute name="subMi">[NUMP]</attribute>
        <apply-templates select="@*[name()!='subMi'] | *"/>
      </copy>
    </template>
</def-rule>
<!-- -->

<!-- cas='[DAT]' && per='' && leafpos='[Z]'/'[NUMP]'	type=~'adi-'/datMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and (cas='[DAT]' and per='' and leafpos='[Z]')) objMi←'[NUMP]'" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@cas='[DAT]' and not(boolean(@per)) and @leafpos='[Z]']]">
      <copy>
        <attribute name="datMi">[NUMP]</attribute>
        <apply-templates select="@*[name()!='datMi'] | *"/>
      </copy>
    </template>
</def-rule>

<!-- si='vsubord'/'[NUMS]'	type=~'adi-'/objMi	up	overwrite -->
  <def-rule id="ST_InterchunkMove2: (type=~'adi' and si='vsubord') objMi←'[NUMP]'" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and ./CHUNK[@si='vsubord']]">
      <copy>
        <attribute name="objMi">[NUMS]</attribute>
        <apply-templates select="@*[name()!='objMi'] | *"/>
      </copy>
    </template>
</def-rule>

<!-- -->

<!-- /'yn' type=~'adi-' && quest='true' && qtype!='wh'/qtype up overwrite -->
  <def-rule id="ST_InterchunkMove2: ((type=~'adi' and quest='true' and qtype!='wh') and si='vsubord') qtype←'yn'" comment="">
    <template match="//CHUNK[contains(@type, 'adi-') and @quest='true' and @qtype!='wh']">
      <copy>
        <attribute name="qtype">yn</attribute>
        <apply-templates select="@*[name()!='qtype'] | *"/>
      </copy>
    </template>
</def-rule>


</transfer>
